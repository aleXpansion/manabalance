package alexpansion.manabalance.frames;

import alexpansion.manabalance.controllers.BattleController;

import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JProgressBar;
import javax.swing.JTextArea;

import alexpansion.manabalance.entity.ActiveAttack;
import alexpansion.manabalance.moves.AttackType;
import alexpansion.manabalance.entity.Mage;

import java.awt.event.ItemEvent;

/**
 *
 * @author Danny
 */
@SuppressWarnings("serial")
public class BattleFrame extends javax.swing.JFrame {

    BattleController controller;
    Mage player;
    Mage enemy;
    JButton[] attackButtons;

    /**
     * Creates new form battle
     *
     * @param controller
     */
    public BattleFrame(BattleController controller) {
        this.controller = controller;
        initComponents();
        player = controller.getPlayer();
        enemy = controller.getEnemy();
        this.attackButtons = new JButton[]{attack0, attack1, attack2, attack3, attack4};
        setAttacks();
        setManaBar("player", player);
        setManaBar("enemy", enemy);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        enemyPanel = new javax.swing.JPanel();
        enemyLabel = new javax.swing.JLabel();
        enemyManaBar = new javax.swing.JProgressBar();
        PlayerPanel = new javax.swing.JPanel();
        playerLabel = new javax.swing.JLabel();
        playerManaBar = new javax.swing.JProgressBar();
        attack0 = new javax.swing.JButton();
        attack1 = new javax.swing.JButton();
        attack2 = new javax.swing.JButton();
        attack3 = new javax.swing.JButton();
        attack4 = new javax.swing.JButton();
        shieldButton0 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        playerAttackArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        enemyAttackArea = new javax.swing.JTextArea();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(58, 170, 170));

        enemyLabel.setText("Enemy");

        javax.swing.GroupLayout enemyPanelLayout = new javax.swing.GroupLayout(enemyPanel);
        enemyPanel.setLayout(enemyPanelLayout);
        enemyPanelLayout.setHorizontalGroup(
            enemyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enemyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(enemyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(enemyPanelLayout.createSequentialGroup()
                        .addComponent(enemyLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(enemyPanelLayout.createSequentialGroup()
                        .addComponent(enemyManaBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        enemyPanelLayout.setVerticalGroup(
            enemyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enemyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enemyManaBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enemyLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        playerLabel.setText("You");

        attack0.setText("jButton1");
        attack0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attack0ActionPerformed(evt);
            }
        });

        attack1.setText("jButton2");
        attack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attack1ActionPerformed(evt);
            }
        });

        attack2.setText("jButton3");
        attack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attack2ActionPerformed(evt);
            }
        });

        attack3.setText("jButton4");
        attack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attack3ActionPerformed(evt);
            }
        });

        attack4.setText("jButton10");
        attack4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attack4ActionPerformed(evt);
            }
        });

        shieldButton0.setText("jToggleButton1");
        shieldButton0.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                shieldButton0ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout PlayerPanelLayout = new javax.swing.GroupLayout(PlayerPanel);
        PlayerPanel.setLayout(PlayerPanelLayout);
        PlayerPanelLayout.setHorizontalGroup(
            PlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerManaBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerLabel)
                    .addGroup(PlayerPanelLayout.createSequentialGroup()
                        .addGroup(PlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(shieldButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(attack0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PlayerPanelLayout.createSequentialGroup()
                                .addComponent(attack1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(attack2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(attack3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(attack4, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                        )))
                .addContainerGap())
        );
        PlayerPanelLayout.setVerticalGroup(
            PlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayerPanelLayout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(PlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(attack1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attack4, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(attack2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attack0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attack3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(PlayerPanelLayout.createParallelGroup().addComponent(shieldButton0))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerLabel)
                .addGap(1, 1, 1)
                .addComponent(playerManaBar, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        playerAttackArea.setEditable(false);
        playerAttackArea.setColumns(20);
        playerAttackArea.setRows(5);
        jScrollPane1.setViewportView(playerAttackArea);

        enemyAttackArea.setEditable(false);
        enemyAttackArea.setColumns(20);
        enemyAttackArea.setRows(5);
        jScrollPane2.setViewportView(enemyAttackArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enemyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PlayerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enemyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlayerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void attack0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attack0ActionPerformed
        controller.attack(0,enemy,player);
        update();
    }//GEN-LAST:event_attack0ActionPerformed

    private void attack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attack1ActionPerformed
        controller.attack(1,enemy,player);
        update();
    }//GEN-LAST:event_attack1ActionPerformed

    private void attack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attack2ActionPerformed
        controller.attack(2,enemy,player);
        update();
    }//GEN-LAST:event_attack2ActionPerformed

    private void attack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attack3ActionPerformed
        controller.attack(3,enemy,player);
        update();
    }//GEN-LAST:event_attack3ActionPerformed

    private void attack4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attack4ActionPerformed
        controller.attack(4,enemy,player);
        update();
    }//GEN-LAST:event_attack4ActionPerformed

    private void shieldButton0ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_shieldButton0ItemStateChanged
        shieldEvent(0,evt);
    }//GEN-LAST:event_shieldButton0ItemStateChanged

    public void setNames(String playerName, String enemyName) {
        playerLabel.setText(playerName);
        enemyLabel.setText(enemyName);
    }

    private void setAttacks() {
        String label;
        AttackType attack;
        AttackType[] attacks = player.getAttacks();
        for (int i = 0; i < 5; i++) {
            attack = attacks[i];
            label = "<html>";
            label += attack.getName();
            label += "<br> ";
            label += attack.getCost() + " " + attack.getPower() + " " + attack.getSpeed();
            attackButtons[i].setText(label);
        }
    }

    private void setManaBar(String position, Mage mage) {
        JProgressBar manaBar;
        switch (position) {
            case "player":
                manaBar = playerManaBar;
                break;
            case "enemy":
                manaBar = enemyManaBar;
                break;
            default:
                System.out.println("ERROR: incorrect mage sent to BatteFrame.setManaBar");
                return;
        }
        manaBar.setMaximum(mage.getManaMax());
        manaBar.setValue(mage.getManaLevel());
        String displayMana = "mana: " + mage.getManaLevel();
        manaBar.setString(displayMana);
        manaBar.setStringPainted(true);
    }

    public void update() {
        setManaBar("player", player);
        setManaBar("enemy", enemy);
        updateAttackAreas();
    }
    
    public void updateAttackAreas(){
        ArrayList<ActiveAttack> playerAttacks = new ArrayList<ActiveAttack>();
        ArrayList<ActiveAttack> enemyAttacks = new ArrayList<ActiveAttack>();
        playerAttackArea.setText("Attacks:\n");
        enemyAttackArea.setText("Attacks:\n");
        ArrayList<ActiveAttack> attacks = controller.getAttacks();
        for(ActiveAttack attack:attacks){
            if(attack.getTarget()==enemy){
                playerAttacks.add(attack);
            }
            else if(attack.getTarget()==player){
                enemyAttacks.add(attack);
            }
        }
        displayAttacks(playerAttacks,playerAttackArea);
        displayAttacks(enemyAttacks,enemyAttackArea);
        
    }
    
    public void displayAttacks(ArrayList<ActiveAttack> attacks,JTextArea display){
        sortAttacks(attacks);
        for(ActiveAttack attack:attacks){
            display.append(attack.getType().getName()+ " : " + attack.getProgress() + "\n");
        }
    }
    
    public void sortAttacks(ArrayList<ActiveAttack> attacks){
        for (int j = 0; j < attacks.size()-1; j++) {
            for (int i = j + 1; i < attacks.size(); i++) {
                if (attacks.get(j).getProgress() < attacks.get(i).getProgress()) {
                    ActiveAttack temp = attacks.get(i);
                    attacks.set(i,attacks.get(j));
                    attacks.set(j,temp);
                }

            }
        }
    }
    
    public void shieldEvent(int shieldNum,ItemEvent evt){
        if(evt.getStateChange()==ItemEvent.SELECTED){
            controller.activateShield(player,shieldNum,0);
        }
        else if(evt.getStateChange()==ItemEvent.DESELECTED){
            controller.deactivateShield(player, 0);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PlayerPanel;
    private javax.swing.JButton attack0;
    private javax.swing.JButton attack1;
    private javax.swing.JButton attack2;
    private javax.swing.JButton attack3;
    private javax.swing.JButton attack4;
    private javax.swing.JTextArea enemyAttackArea;
    private javax.swing.JLabel enemyLabel;
    private javax.swing.JProgressBar enemyManaBar;
    private javax.swing.JPanel enemyPanel;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea playerAttackArea;
    private javax.swing.JLabel playerLabel;
    private javax.swing.JProgressBar playerManaBar;
    private javax.swing.JToggleButton shieldButton0;
    // End of variables declaration//GEN-END:variables
}
